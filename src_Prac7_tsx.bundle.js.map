{"version":3,"file":"src_Prac7_tsx.bundle.js","mappings":";;;;;;;;kaAAA,IAAAA,WAAA,CAAAC,mBAAA,iEAmBA,IAAAC,MAAA,CAAAD,mBAAA,+CACA,GAAM,CAAAE,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,CAAS,CACzB,IAAAC,SAAA,CAA8B,GAAAC,eAAQ,EAAC,CAAC,CAAC,CAAAC,UAAA,IAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA,IAAlCK,OAAO,CAAAH,UAAA,IAAEI,UAAU,CAAAJ,UAAA,IAC1B,IAAAK,UAAA,CAA8B,GAAAN,eAAQ,EAAC,CAAC,CAAC,CAAAO,UAAA,IAAAL,eAAA,CAAAC,OAAA,EAAAG,UAAA,IAAlCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAC1B,IAAAG,UAAA,CAA0B,GAAAV,eAAQ,EAAC,CAAC,CAAC,CAAAW,UAAA,IAAAT,eAAA,CAAAC,OAAA,EAAAO,UAAA,IAA9BE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IACtB,IAAAG,UAAA,CAAkC,GAAAd,eAAQ,EAAC,KAAK,CAAC,CAAAe,UAAA,IAAAb,eAAA,CAAAC,OAAA,EAAAW,UAAA,IAA1CE,SAAS,CAAAD,UAAA,IAAEE,YAAY,CAAAF,UAAA,IAC9B,IAAAG,UAAA,CAAoC,GAAAlB,eAAQ,EAAC,KAAK,CAAC,CAAAmB,WAAA,IAAAjB,eAAA,CAAAC,OAAA,EAAAe,UAAA,IAA5CE,UAAU,CAAAD,WAAA,IAAEE,aAAa,CAAAF,WAAA,IAChC,GAAM,CAAAG,WAAW,CAAG,GAAAC,aAAM,EAAC,IAAI,CAAC,CAEhC,GAAM,CAAAC,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,GAAG,CAAEC,GAAG,CAAK,CAC7B,MAAO,CAACD,GAAG,CAAG,EAAE,CAAGC,GAAG,EAAI,IAAI,CAClC,CAAC,CAED,GAAM,CAAAC,cAAc,CAAG,GAAAC,kBAAW,EAAC,UAAM,CACrC,GAAM,CAAAC,iBAAiB,CAAGL,UAAU,CAACpB,OAAO,CAAEI,OAAO,CAAC,CACtDK,QAAQ,CAACgB,iBAAiB,CAAC,CAC3BZ,YAAY,CAAC,IAAI,CAAC,CAClBI,aAAa,CAAC,KAAK,CAAC,CACxB,CAAC,CAAE,CAACjB,OAAO,CAAEI,OAAO,CAAC,CAAC,CAEtB,GAAM,CAAAsB,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,CAAS,CACzB,GAAIR,WAAW,CAACS,OAAO,CAAE,CACrBC,aAAa,CAACV,WAAW,CAACS,OAAO,CAAC,CACtC,CACAd,YAAY,CAAC,KAAK,CAAC,CACnBI,aAAa,CAAC,KAAK,CAAC,CACpBR,QAAQ,CAAC,CAAC,CAAC,CACXR,UAAU,CAAC,CAAC,CAAC,CACbI,UAAU,CAAC,CAAC,CAAC,CACjB,CAAC,CAED,GAAM,CAAAwB,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,CAAS,CACzB,GAAIX,WAAW,CAACS,OAAO,CAAE,CACrBC,aAAa,CAACV,WAAW,CAACS,OAAO,CAAC,CACtC,CACAd,YAAY,CAAC,KAAK,CAAC,CACvB,CAAC,CAED,GAAAiB,gBAAS,EAAC,UAAM,CACZ,GAAIlB,SAAS,EAAIJ,KAAK,CAAG,CAAC,CAAE,CACxBU,WAAW,CAACS,OAAO,CAAGI,WAAW,CAAC,UAAM,CACpCtB,QAAQ,CAAC,SAACuB,SAAS,CAAK,CACpB,GAAIA,SAAS,EAAI,IAAI,CAAE,CACnBJ,aAAa,CAACV,WAAW,CAACS,OAAO,CAAC,CAClCd,YAAY,CAAC,KAAK,CAAC,CACnBI,aAAa,CAAC,IAAI,CAAC,CACnBgB,KAAK,CAAC,YAAY,CAAC,CACnB,MAAO,EAAC,CACZ,CACA,MAAO,CAAAD,SAAS,CAAG,IAAI,CAC3B,CAAC,CAAC,CACN,CAAC,CAAE,IAAI,CAAC,CACZ,CAEA,MAAO,WAAM,CACT,GAAId,WAAW,CAACS,OAAO,CAAE,CACrBC,aAAa,CAACV,WAAW,CAACS,OAAO,CAAC,CACtC,CACJ,CAAC,CACL,CAAC,CAAE,CAACf,SAAS,CAAEJ,KAAK,CAAC,CAAC,CAEtB,GAAM,CAAA0B,gBAAgB,CAAGC,IAAI,CAACC,KAAK,CAAC5B,KAAK,CAAG,IAAI,CAAG,EAAE,CAAC,CACtD,GAAM,CAAA6B,gBAAgB,CAAGF,IAAI,CAACC,KAAK,CAAE5B,KAAK,CAAG,IAAI,CAAI,EAAE,CAAC,CACxD,MAAQ,GAAA8B,gBAAK,EAAC,KAAK,CAAE,CAAEC,KAAK,CAAEC,MAAM,CAACC,SAAS,CAAEC,QAAQ,CAAE,CAAC,GAAAJ,gBAAK,EAAC,KAAK,CAAE,CAAEC,KAAK,CAAEC,MAAM,CAACG,YAAY,CAAED,QAAQ,CAAE,CAAC,GAAAE,eAAI,EAAC,MAAM,CAAE,CAAEF,QAAQ,CAAER,gBAAiB,CAAC,CAAC,CAAE,OAAO,CAAE,GAAAU,eAAI,EAAC,MAAM,CAAE,CAAEF,QAAQ,CAAEL,gBAAiB,CAAC,CAAC,CAAE,MAAM,CAAE,CAAC,CAAC,CAAE,GAAAC,gBAAK,EAAC,KAAK,CAAE,CAAEC,KAAK,CAAEC,MAAM,CAACK,IAAI,CAAEH,QAAQ,CAAE,CAAC,GAAAE,eAAI,EAAC,OAAO,CAAE,CAAEE,IAAI,CAAE,QAAQ,CAAEzB,GAAG,CAAE,GAAG,CAAE0B,KAAK,CAAE/C,OAAO,CAAEgD,QAAQ,CAAEpC,SAAS,CAAEqC,QAAQ,CAAE,SAAAA,SAACC,CAAC,QAAK,CAAAjD,UAAU,CAACkD,MAAM,CAACD,CAAC,CAACE,MAAM,CAACL,KAAK,CAAC,CAAC,GAAEM,WAAW,CAAE,SAAS,CAAEd,KAAK,CAAEC,MAAM,CAACc,KAAM,CAAC,CAAC,CAAE,GAAAV,eAAI,EAAC,OAAO,CAAE,CAAEE,IAAI,CAAE,QAAQ,CAAEzB,GAAG,CAAE,GAAG,CAAE0B,KAAK,CAAE3C,OAAO,CAAE4C,QAAQ,CAAEpC,SAAS,CAAEqC,QAAQ,CAAE,SAAAA,SAACC,CAAC,QAAK,CAAA7C,UAAU,CAAC8C,MAAM,CAACD,CAAC,CAACE,MAAM,CAACL,KAAK,CAAC,CAAC,GAAEM,WAAW,CAAE,SAAS,CAAEd,KAAK,CAAEC,MAAM,CAACc,KAAM,CAAC,CAAC,CAAE,GAAAV,eAAI,EAAC,QAAQ,CAAE,CAAEW,OAAO,CAAEhC,cAAc,CAAEyB,QAAQ,CAAEpC,SAAS,EAAIJ,KAAK,GAAK,CAAC,CAAEkC,QAAQ,CAAE,OAAQ,CAAC,CAAC,CAAE,GAAAE,eAAI,EAAC,QAAQ,CAAE,CAAEW,OAAO,CAAE7B,cAAc,CAAEsB,QAAQ,CAAEpC,SAAS,CAAE8B,QAAQ,CAAE,OAAQ,CAAC,CAAC,CAAE,GAAAE,eAAI,EAAC,QAAQ,CAAE,CAAEW,OAAO,CAAE1B,cAAc,CAAEmB,QAAQ,CAAE,CAACpC,SAAS,CAAE8B,QAAQ,CAAE,OAAQ,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE1B,UAAU,EAAI,GAAA4B,eAAI,EAAC,GAAG,CAAE,CAAEL,KAAK,CAAEC,MAAM,CAACP,KAAK,CAAES,QAAQ,CAAE,YAAa,CAAC,CAAC,CAAE,CAAC,CAAC,CAC39B,CAAC,CAED,GAAM,CAAAF,MAAM,CAAG,CACXC,SAAS,CAAE,CACPe,OAAO,CAAE,MAAM,CACfC,aAAa,CAAE,QAAQ,CACvBC,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAAQ,CACxBC,MAAM,CAAE,OACZ,CAAC,CACDjB,YAAY,CAAE,CACVkB,QAAQ,CAAE,KAAK,CACfC,YAAY,CAAE,KAClB,CAAC,CACDjB,IAAI,CAAE,CACFW,OAAO,CAAE,MAAM,CACfO,GAAG,CAAE,KAAK,CACVL,UAAU,CAAE,QAChB,CAAC,CACDJ,KAAK,CAAE,CACHU,OAAO,CAAE,OAAO,CAChBH,QAAQ,CAAE,KACd,CAAC,CACD5B,KAAK,CAAE,CACHgC,KAAK,CAAE,KAAK,CACZJ,QAAQ,CAAE,OAAO,CACjBK,SAAS,CAAE,KACf,CACJ,CAAC,CAAC,IAAAC,QAAA,CAAAC,kBAAA,CACa1E,cAAc","sources":["webpack://ts-webpack-rn/./src/Prac7.tsx"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * Create a Countdown Timer App.\n\nIn this app, the user inputs time (minutes and seconds), and when they press the start button, a countdown begins. When the time reaches 0, an alert is displayed, and the countdown result remains visible on the screen until the reset button is pressed.\n\nRequirements:\n\n    The user should be able to input minutes and seconds through a form. v\n    When the start button is pressed, the countdown begins. v\n    When the countdown reaches 0, an alert should pop up saying \"Time's up!\". v\n    While the timer is running, the input fields and the start button should be disabled. v\n    Once the countdown is finished, the user should be able to press a reset button to reset the timer. After resetting, the input fields become active again, allowing the user to set new time. v\n\nOptional Features:\n\n    Add a \"Pause\" button that allows the user to pause and resume the countdown.\n    Display a list of previous countdowns after resetting.\n */\nimport { useState, useEffect, useRef, useCallback } from 'react';\nconst CountdownTimer = () => {\n    const [minutes, setMinutes] = useState(0);\n    const [seconds, setSeconds] = useState(0);\n    const [count, setCount] = useState(0);\n    const [isRunning, setIsRunning] = useState(false);\n    const [isFinished, setIsFinished] = useState(false);\n    const intervalRef = useRef(null);\n    // Convert minutes and seconds into milliseconds\n    const getMiliSec = (min, sec) => {\n        return (min * 60 + sec) * 1000;\n    };\n    // Start the countdown\n    const startCountdown = useCallback(() => {\n        const totalMilliseconds = getMiliSec(minutes, seconds);\n        setCount(totalMilliseconds);\n        setIsRunning(true);\n        setIsFinished(false);\n    }, [minutes, seconds]);\n    // Reset the timer\n    const resetCountdown = () => {\n        if (intervalRef.current) {\n            clearInterval(intervalRef.current);\n        }\n        setIsRunning(false);\n        setIsFinished(false);\n        setCount(0);\n        setMinutes(0);\n        setSeconds(0);\n    };\n    // Pause the countdown\n    const pauseCountdown = () => {\n        if (intervalRef.current) {\n            clearInterval(intervalRef.current);\n        }\n        setIsRunning(false);\n    };\n    // Update the timer every second\n    useEffect(() => {\n        if (isRunning && count > 0) {\n            intervalRef.current = setInterval(() => {\n                setCount((prevCount) => {\n                    if (prevCount <= 1000) {\n                        clearInterval(intervalRef.current);\n                        setIsRunning(false);\n                        setIsFinished(true);\n                        alert(\"Time's up!\");\n                        return 0;\n                    }\n                    return prevCount - 1000;\n                });\n            }, 1000);\n        }\n        // Cleanup on unmount or when isRunning changes\n        return () => {\n            if (intervalRef.current) {\n                clearInterval(intervalRef.current);\n            }\n        };\n    }, [isRunning, count]);\n    // Display remaining minutes and seconds\n    const remainingMinutes = Math.floor(count / 1000 / 60);\n    const remainingSeconds = Math.floor((count / 1000) % 60);\n    return (_jsxs(\"div\", { style: styles.container, children: [_jsxs(\"div\", { style: styles.timerDisplay, children: [_jsx(\"span\", { children: remainingMinutes }), \" min \", _jsx(\"span\", { children: remainingSeconds }), \" sec\"] }), _jsxs(\"div\", { style: styles.form, children: [_jsx(\"input\", { type: \"number\", min: \"0\", value: minutes, disabled: isRunning, onChange: (e) => setMinutes(Number(e.target.value)), placeholder: \"Minutes\", style: styles.input }), _jsx(\"input\", { type: \"number\", min: \"0\", value: seconds, disabled: isRunning, onChange: (e) => setSeconds(Number(e.target.value)), placeholder: \"Seconds\", style: styles.input }), _jsx(\"button\", { onClick: startCountdown, disabled: isRunning || count === 0, children: \"Start\" }), _jsx(\"button\", { onClick: resetCountdown, disabled: isRunning, children: \"Reset\" }), _jsx(\"button\", { onClick: pauseCountdown, disabled: !isRunning, children: \"Pause\" })] }), isFinished && _jsx(\"p\", { style: styles.alert, children: \"Time's up!\" })] }));\n};\n// CSS styles\nconst styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n    },\n    timerDisplay: {\n        fontSize: '2em',\n        marginBottom: '1em',\n    },\n    form: {\n        display: 'flex',\n        gap: '1em',\n        alignItems: 'center',\n    },\n    input: {\n        padding: '0.5em',\n        fontSize: '1em',\n    },\n    alert: {\n        color: 'red',\n        fontSize: '1.5em',\n        marginTop: '1em',\n    },\n};\nexport default CountdownTimer;\n"],"names":["_jsxRuntime","require","_react","CountdownTimer","_useState","useState","_useState2","_slicedToArray2","default","minutes","setMinutes","_useState3","_useState4","seconds","setSeconds","_useState5","_useState6","count","setCount","_useState7","_useState8","isRunning","setIsRunning","_useState9","_useState10","isFinished","setIsFinished","intervalRef","useRef","getMiliSec","min","sec","startCountdown","useCallback","totalMilliseconds","resetCountdown","current","clearInterval","pauseCountdown","useEffect","setInterval","prevCount","alert","remainingMinutes","Math","floor","remainingSeconds","_jsxs","style","styles","container","children","timerDisplay","_jsx","form","type","value","disabled","onChange","e","Number","target","placeholder","input","onClick","display","flexDirection","alignItems","justifyContent","height","fontSize","marginBottom","gap","padding","color","marginTop","_default","exports"],"sourceRoot":""}