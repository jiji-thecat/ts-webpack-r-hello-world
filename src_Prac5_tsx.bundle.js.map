{"version":3,"file":"src_Prac5_tsx.bundle.js","mappings":";;;;;;;;uFAAA,IAAAA,WAAA,CAAAC,mBAAA,iEAOA,IAAAC,MAAA,CAAAD,mBAAA,+CAA4C,IAAAE,QAAA,CAAAC,kBAAA,CAG7B,SAAAD,SAAA,CAAM,CACjB,GAAM,CAAAG,QAAQ,CAAG,GAAAC,aAAM,EAAC,IAAI,CAAC,CAC7B,GAAM,CAAAC,OAAO,CAAG,GAAAC,kBAAW,EAAC,UAAM,CAC9BC,KAAK,CAACJ,QAAQ,CAACK,OAAO,CAACC,KAAK,CAAC,CACjC,CAAC,CAAE,EAAE,CAAC,CACN,MAAQ,GAAAC,gBAAK,EAACC,oBAAS,CAAE,CAAEC,QAAQ,CAAE,CAAC,GAAAC,eAAI,EAAC,OAAO,CAAE,CAAEC,GAAG,CAAEX,QAAS,CAAC,CAAC,CAAE,GAAAU,eAAI,EAAC,QAAQ,CAAE,CAAER,OAAO,CAAEA,OAAO,CAAEO,QAAQ,CAAE,UAAW,CAAC,CAAC,CAAE,CAAC,CAAC,CAC1I,CAAC","sources":["webpack://ts-webpack-rn/./src/Prac5.tsx"],"sourcesContent":["import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * 5. フォームの操作\n\n    目標: フォームの要素に対してDOM操作を行い、フォームの値を取得、バリデーション、サブミットなどを練習。\n    練習例: ボタンをクリックしてフォームの入力値を取得し、alertで表示する。\n */\nimport { useRef, useCallback } from 'react';\n// idをinputに指定して、document.getElementById(id)して、alert(element.value)でもできるけど、今回はrefを使う。\n// refを使うことで要素に簡単にアクセスできるので、これを使う。\nexport default () => {\n    const inputRef = useRef(null);\n    const onClick = useCallback(() => {\n        alert(inputRef.current.value);\n    }, []);\n    return (_jsxs(_Fragment, { children: [_jsx(\"input\", { ref: inputRef }), _jsx(\"button\", { onClick: onClick, children: \"click me\" })] }));\n};\n"],"names":["_jsxRuntime","require","_react","_default","exports","default","inputRef","useRef","onClick","useCallback","alert","current","value","_jsxs","_Fragment","children","_jsx","ref"],"sourceRoot":""}