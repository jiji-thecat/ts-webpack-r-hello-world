{"version":3,"file":"src_Prac1_tsx.bundle.js","mappings":";;;;;;;;uFAAA,IAAAA,WAAA,CAAAC,mBAAA,iEAOA,IAAAC,MAAA,CAAAD,mBAAA,+CAA4C,IAAAE,QAAA,CAAAC,kBAAA,CAK7B,SAAAD,SAAA,CAAM,CACjB,GAAI,CAAAG,QAAQ,CAAG,GAAAC,aAAM,EAAC,IAAI,CAAC,CAC3B,GAAM,CAAAC,OAAO,CAAG,GAAAC,kBAAW,EAAC,UAAM,CAC9BH,QAAQ,CAACI,OAAO,CAACC,KAAK,CAAC,CAAC,CAC5B,CAAC,CAAE,EAAE,CAAC,CACN,MAAQ,GAAAC,gBAAK,EAAC,KAAK,CAAE,CAAEC,QAAQ,CAAE,CAAC,GAAAC,eAAI,EAAC,OAAO,CAAE,CAAEC,GAAG,CAAET,QAAS,CAAC,CAAC,CAAE,GAAAQ,eAAI,EAAC,QAAQ,CAAE,CAAEN,OAAO,CAAEA,OAAO,CAAEK,QAAQ,CAAE,UAAW,CAAC,CAAC,CAAE,CAAC,CAAC,CACtI,CAAC","sources":["webpack://ts-webpack-rn/./src/Prac1.tsx"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * 1. useRefを使った要素へのアクセス\n\n    目標: ReactのuseRefフックを使って、特定のDOM要素にアクセスし、その要素に対して操作を行う練習。\n    練習例: ボタンをクリックすると、入力フィールドに自動的にフォーカスを移す機能を作成する。\n */\nimport { useRef, useCallback } from 'react';\n/**\n * onClickを押したら、refのfocus()を呼び出す。\n * useRefの型定義はanyにしておく。\n */\nexport default () => {\n    let inputRef = useRef(null);\n    const onClick = useCallback(() => {\n        inputRef.current.focus();\n    }, []);\n    return (_jsxs(\"div\", { children: [_jsx(\"input\", { ref: inputRef }), _jsx(\"button\", { onClick: onClick, children: \"press me\" })] }));\n};\n"],"names":["_jsxRuntime","require","_react","_default","exports","default","inputRef","useRef","onClick","useCallback","current","focus","_jsxs","children","_jsx","ref"],"sourceRoot":""}