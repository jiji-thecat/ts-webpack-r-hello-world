{"version":3,"file":"src_test_ts.bundle.js","mappings":";;;;;;;;;AAAa,IAAAA,sBAAA,CAAAC,mBAAA,2HAAAC,mBAAA,CAAAF,sBAAA,CAAAC,mBAAA,gHACb,GAAI,CAAAE,QAAQ,CAAG,CACX,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACT,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACT,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACZ,CAED,GAAM,CAAAC,OAAO,IAAAC,MAAA,CAAOF,QAAQ,CAAC,CAE7B,GAAM,CAAAG,UAAU,CAAG,EAAE,CACrB,IAAK,GAAI,CAAAC,CAAC,GAAI,CAAAJ,QAAQ,CAAE,CACpBG,UAAU,CAACE,IAAI,IAAAN,mBAAA,CAAAO,OAAA,EAAKF,CAAC,CAAC,CAAC,CAC3B,CACAJ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAG,EAAE,CACnBO,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC,CACvBI,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;;;;;;;;;;ACfpB,uBAAuB,mBAAO,CAAC,wFAAuB;AACtD;AACA;AACA;AACA,qCAAqC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACJhG;AACA;AACA;AACA,mCAAmC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACH9F;AACA;AACA;AACA,qCAAqC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACHhG,wBAAwB,mBAAO,CAAC,0FAAwB;AACxD,sBAAsB,mBAAO,CAAC,sFAAsB;AACpD,iCAAiC,mBAAO,CAAC,4GAAiC;AAC1E,wBAAwB,mBAAO,CAAC,0FAAwB;AACxD;AACA;AACA;AACA,qCAAqC,yBAAyB,SAAS,yBAAyB","sources":["webpack://ts-webpack-rn/./src/test.ts","webpack://ts-webpack-rn/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://ts-webpack-rn/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://ts-webpack-rn/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://ts-webpack-rn/./node_modules/@babel/runtime/helpers/toConsumableArray.js"],"sourcesContent":["\"use strict\";\nlet BOX_DATA = [\n    [1, 1, 1],\n    [1, 0, 0],\n    [1, 1, 1],\n];\n//BOX_DATA[0].map((v) => console.log(v));\nconst newData = [...BOX_DATA];\n// 二次元配列をコピーするときは、column単位で[...spread]しないとだめ。\nconst newNewData = [];\nfor (let v of BOX_DATA) {\n    newNewData.push([...v]);\n}\nBOX_DATA[0][1] = 10;\nconsole.log(newNewData);\nconsole.log(newData);\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["_interopRequireDefault","require","_toConsumableArray2","BOX_DATA","newData","concat","newNewData","v","push","default","console","log"],"sourceRoot":""}