{"version":3,"file":"src_Prac2_tsx.bundle.js","mappings":";;;;;;;;uFAAA,IAAAA,WAAA,CAAAC,mBAAA,iEAOA,IAAAC,MAAA,CAAAD,mBAAA,+CAA+C,IAAAE,QAAA,CAAAC,kBAAA,CAMhC,SAAAD,SAAA,CAAM,CACjB,GAAM,CAAAG,YAAY,CAAG,GAAAC,kBAAW,EAAC,UAAM,CACnCC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CACjD,CAAC,CAAE,EAAE,CAAC,CACN,GAAAC,gBAAS,EAAC,UAAM,CACZC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,CAAER,YAAY,CAAC,CAC/C,MAAO,WAAM,CACTO,MAAM,CAACE,mBAAmB,CAAC,QAAQ,CAAET,YAAY,CAAC,CACtD,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CACN,MAAO,GAAAU,eAAI,EAAC,KAAK,CAAE,CAAEN,KAAK,CAAE,CAAEO,MAAM,CAAE,OAAQ,CAAC,CAAEC,QAAQ,CAAE,mCAAoC,CAAC,CAAC,CACrG,CAAC","sources":["webpack://ts-webpack-rn/./src/Prac2.tsx"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * 2. イベントリスナーの追加・削除\n\n    目標: DOM要素に対してaddEventListenerやremoveEventListenerを使い、特定のアクションに基づいてDOMの操作を行う方法を理解する。\n    練習例: スクロール時に要素の色を変える。コンポーネントのマウント時にイベントリスナーを追加し、アンマウント時に削除する。\n */\nimport { useCallback, useEffect } from 'react';\n/**\n * window.eventlistenerのスクロールイベントに対してハンドルスクロールのイベントを登録する。\n * イベントが発生したら背景の色を変える。\n * アンマウント時（useEffectのreturn）で登録解除する。\n */\nexport default () => {\n    const handleScroll = useCallback(() => {\n        document.body.style.backgroundColor = 'green';\n    }, []);\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, []);\n    return _jsx(\"div\", { style: { height: '200vh' }, children: \"Scroll to change background color\" });\n};\n"],"names":["_jsxRuntime","require","_react","_default","exports","default","handleScroll","useCallback","document","body","style","backgroundColor","useEffect","window","addEventListener","removeEventListener","_jsx","height","children"],"sourceRoot":""}